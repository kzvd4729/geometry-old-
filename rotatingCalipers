//polygoan is convex and ccw-ordered
//not closed circuit
//return the farthest distance squared;
int rotatingCalipers(vector<point>&p)
{
  int n=p.size(),ans=0;if(n==1)return 0;
  if(n==2)return p[0].distSqure(p[1]);
  p.push_back(p[0]);//to consider all triangle
  for(int i=0,j=1;i<n;i++)
  {
    //triangle compare.
    while(abs((p[i+1]-p[j+1])^(p[i]-p[j+1]))>abs((p[i+1]-p[j])^(p[i]-p[j])))
      j=(j+1)%n;
    ans=max(ans,p[i].distSqure(p[j]));
    ans=max(ans,p[i+1].distSqure(p[j]));
  }
  return ans;
}
